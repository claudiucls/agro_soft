/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import dbUtil.Calcul;
import dbUtil.DBConnect;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.Date;
import java.text.Format;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.Month;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import models.Angajat;
import models.Event;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.swing.JRViewer;
import services.DBQueries;
import services.Sarbatori;

/**
 *
 * @author Claudiu
 */


public class JILStateDePlata extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIListaAngajati
     */
    private DBQueries db;
    private LocalDate today = LocalDate.now();
    private LocalDate date1 = LocalDate.now();
    private List<Angajat> angajati;

    public JILStateDePlata() {

        initComponents();
        db = new DBQueries();
        angajati= db.findAngajati("", true);
        clean();
        setLocation(setCenterPoint());
        refreshtable(today);
        

    }

    public Point setCenterPoint() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        Point p = new Point(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        return p;
    }
   

    public void clean() {
        jComboBox1.setSelectedIndex(today.getMonthValue() - 1);
        jTextField1.setText(String.valueOf(today.getYear()));
    }

    public String getLunafromDate(LocalDate date) {
        final Locale romania = new Locale("ro", "ro");
        Format f = new SimpleDateFormat("MMMM", romania);
        return f.format(Date.valueOf(date));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void refreshtable(LocalDate date) {
        date1 = date;
       
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }

        };
        int days = date.lengthOfMonth();
        Object[] header = new Object[15];
        header[0] = "Nr.Crt";
        header[1] = "Numele";
        header[2] = "CNP";
        header[3] = "Functia";
        header[4] = "Salariu Brut";
        header[5] = "Zile lucrate";
        header[6] = "CAS 10.5%";
        header[7] = "CASS 5.5%";
        header[8] = "CFS 0.5%";
        header[9] = "Pers. Int.";
        header[10] = "DP";
        header[11] = "Impozit V 16%";
        header[12] = "Val. TM";
        header[13] = "Retineri";
        header[14] = "Salariu Net";

        model.setColumnIdentifiers(header);
        Object[] row = new Object[15];
        Sarbatori s = new Sarbatori();
        Calcul calcul = new Calcul();
        for (int i = 0; i < angajati.size(); i++) {
            int zileL = Sarbatori.zileLucratoareInLuna(date) - s.zileLucratoare(angajati.get(i), date);
            double salariuB = angajati.get(i).getSalariu();
            double cas = Math.round(salariuB * 0.105);
            double cass = Math.round(salariuB * 0.055);
            double cfs = 0;
            if (angajati.get(i).getId() != 17) {
               cfs = Math.round(salariuB * 0.005);
            }
            double impozit = Math.round(0.16 * ((salariuB - (cas + cass + cfs ))- calculDI(angajati.get(i)) + zileL * Double.parseDouble(jTextField2.getText())));
            row[0] = i + 1;
            row[1] = angajati.get(i).getNume();
            row[2] = angajati.get(i).getCnp();
            row[3] = angajati.get(i).getFunctia();
            row[4] = salariuB;
            row[5] = zileL;
            row[6] = cas;
            row[7] = cass;
            row[8] = cfs;
            row[9] = angajati.get(i).getPersInt();
            row[10] = Math.round(calculDI(angajati.get(i)));
            row[11] = impozit;
            row[12] = Math.round(zileL * Double.parseDouble(jTextField2.getText()));
            row[13] = calcul.valoareRetineri(angajati.get(i), date);
            row[14] = salariuB - (cas + cass + cfs + impozit+calcul.valoareRetineri(angajati.get(i), date));
            model.addRow(row);
        }

        jTable1.setModel(model);
        db.resizeColumnWidth(jTable1);

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        StateDePlataBtn = new javax.swing.JButton();

        setClosable(true);
        setTitle("State de plata si Fluturasi de salariu");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Selectati luna si anul pentru afisarea statelor");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 0));
        jButton1.setText("Actualizeaza");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ianuarie", "Februarie", "Martie", "Aprilie", "Mai", "Iunie", "Iulie", "August", "Septembrie", "Octombrie", "Noiembrie", "Decembrie" }));

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField1.setText("2016");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Anul");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(67, 67, 67))
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Listare State de Plata");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField2.setText("9.57");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("<html>Valoare Ticket de masa</html>");

        StateDePlataBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        StateDePlataBtn.setText("Listare Fluturasi");
        StateDePlataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StateDePlataBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StateDePlataBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StateDePlataBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int month = jComboBox1.getSelectedIndex() + 1;
        int year = Integer.parseInt(jTextField1.getText());
        refreshtable(LocalDate.of(year, month, 1));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DateTimeFormatter f = DateTimeFormatter.ofPattern("MM-yyyy");
        Map<String, Object> params = new HashMap<>();
        params.put("luna", f.format(date1));

        try {
            InputStream in = getClass().getResourceAsStream("/rapoarte/state.jasper");
            JasperPrint jp = JasperFillManager.fillReport(in, params, new JRTableModelDataSource(jTable1.getModel()));
            if (jp.getPages().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nu este nimic de afisat!");
                return;
            } else {
                JRViewer viewer1 = new JRViewer(jp);
                JFrame jf = new JFrame();
                jf.setLocation(0, 0);
                Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
                jf.setSize(dim);
                jf.add(viewer1);
                jf.setVisible(true);
                jf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            }

        } catch (JRException ex) {
            Logger.getLogger(JIListareNiruri.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    public double calculDI(Angajat a) {
        double salariu = a.getSalariu();
        short pers = a.getPersInt();
        double ded = 0;
        if (salariu <= 1500) {
            switch (pers) {
                default:
                    ded = 300;
                    break;
                case 1:
                    ded = 400;
                    break;
                case 2:
                    ded = 500;
                    break;
                case 3:
                    ded = 600;
                    break;
                case 4:
                    ded = 800;
                    break;
            }
        } else if (salariu >= 1501 && salariu <= 3000) {
            switch (pers) {
                default:
                    ded = 300 * (1 - (salariu - 1500) / 1500);
                    break;
                case 1:
                    ded = 400 * (1 - (salariu - 1500) / 1500);
                    break;
                case 2:
                    ded = 500 * (1 - (salariu - 1500) / 1500);
                    break;
                case 3:
                    ded = 600 * (1 - (salariu - 1500) / 1500);
                    break;
                case 4:
                    ded = 800 * (1 - (salariu - 1500) / 1500);
                    break;
            }
        } else {
            ded = 0;
        }

        return ded;
    }

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void StateDePlataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StateDePlataBtnActionPerformed
        DateTimeFormatter f = DateTimeFormatter.ofPattern("MM-yyyy");
        Map<String, Object> params = new HashMap<>();
        params.put("luna", f.format(date1));
        try {
            InputStream in = getClass().getResourceAsStream("/rapoarte/fluturasi.jasper");
            JasperPrint jp = JasperFillManager.fillReport(in, params, new JRTableModelDataSource(jTable1.getModel()));
            if (jp.getPages().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nu este nimic de afisat!");
                return;
            } else {
                JRViewer viewer1 = new JRViewer(jp);
                JFrame jf = new JFrame();
                jf.setLocation(0, 0);
                Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
                jf.setSize(dim);
                jf.add(viewer1);
                jf.setVisible(true);
                jf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            }

        } catch (JRException ex) {
            Logger.getLogger(JIListareNiruri.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_StateDePlataBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton StateDePlataBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    private String getPontaj(Angajat a, int zi, LocalDate date) {
        int month = date.getMonthValue();
        int year = date.getYear();
        LocalDate d = LocalDate.of(year, month, zi);
        if (Sarbatori.esteSarbatoare(d)) {
            return " ";
        }
        List<Event> evs = db.getEventByIdAngajat(a.getId());
        if (!evs.isEmpty()) {
            if (d.getDayOfWeek() == DayOfWeek.SUNDAY || d.getDayOfWeek() == DayOfWeek.SATURDAY) {
                return "X";
            } else {
                for (Event e : evs) {
                    if (d.isAfter(e.getDataDeLa().minusDays(1)) && d.isBefore(e.getDataPanaLa().plusDays(1))) {
                        return e.getCod();
                    }
                }
            }
        } else if (d.getDayOfWeek() == DayOfWeek.SUNDAY || d.getDayOfWeek() == DayOfWeek.SATURDAY) {
            return "X";
        }
        return "8";
    }
}
